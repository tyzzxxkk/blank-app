import streamlit as st

# --- 1. 앱 기본 설정 ---
# st.set_page_config()는 앱의 제목(탭 이름)과 아이콘을 설정하는 데 사용됩니다.
# 이 코드는 스크립트에서 가장 먼저 실행되어야 합니다.
st.set_page_config(
    page_title="나의 MBTI 학습 유형은?",
    page_icon="🧠"
)

# --- 2. 진단 결과 데이터 ---
# 각 MBTI 유형별 특징과 추천 학습법을 딕셔너리 형태로 저장합니다.
# 나중에 사용자의 MBTI 결과에 맞는 설명을 보여줄 때 사용됩니다.
results = {
    "ISTJ": {
        "type": "논리적인 현실주의자 (소금형)",
        "description": "차분하고 책임감이 강하며, 사실에 근거하여 체계적으로 학습하는 것을 선호합니다.",
        "study": "• 구체적인 학습 목표 설정\n• 요약 및 정리 노트 필기\n• 조용한 환경에서 혼자 공부하기"
    },
    "ISFJ": {
        "type": "용감한 수호자 (권력형)",
        "description": "따뜻하고 성실하며, 다른 사람들을 도우면서 학습할 때 동기부여를 받습니다.",
        "study": "• 스터디 그룹 참여\n• 실제 사례를 통한 학습\n• 꾸준한 복습과 암기"
    },
    "INFJ": {
        "type": "선의의 옹호자 (예언자형)",
        "description": "통찰력이 뛰어나고 이상주의적이며, 학습 내용의 의미와 가치를 중요하게 생각합니다.",
        "study": "• 토론 및 세미나 참여\n• 비유와 상징을 활용한 개념 이해\n• 장기적인 비전을 갖고 학습하기"
    },
    "INTJ": {
        "type": "용의주도한 전략가 (과학자형)",
        "description": "독창적이고 논리적이며, 복잡한 이론이나 아이디어를 탐구하는 것을 즐깁니다.",
        "study": "• 심층적인 자료 탐구\n• 자신만의 학습 모델 만들기\n• 지적 호기심을 자극하는 주제 선택"
    },
    "ISTP": {
        "type": "만능 재주꾼 (백과사전형)",
        "description": "상황 적응력이 뛰어나고, 직접 손으로 만지고 경험하며 배우는 것을 가장 좋아합니다.",
        "study": "• 실험 및 실습 위주의 학습\n• 문제 해결 중심의 프로젝트\n• 시행착오를 통한 원리 터득"
    },
    "ISFP": {
        "type": "호기심 많은 예술가 (성인군자형)",
        "description": "온화하고 겸손하며, 미적 감각을 활용하거나 자유로운 분위기에서 학습할 때 능률이 오릅니다.",
        "study": "• 시각 자료(이미지, 영상) 활용\n• 창의적인 표현 활동(그림, 글쓰기)\n• 경쟁 없는 편안한 분위기 조성"
    },
    "INFP": {
        "type": "열정적인 중재자 (잔다르크형)",
        "description": "이상주의적이고 창의적이며, 자신의 가치관과 일치하는 내용을 배울 때 깊이 몰입합니다.",
        "study": "• 인문학, 예술 분야 탐구\n• 독서와 성찰을 통한 학습\n• 자신의 생각과 느낌을 표현하기"
    },
    "INTP": {
        "type": "논리적인 사색가 (아이디어형)",
        "description": "지적 호기심이 왕성하고, 논리적 분석과 추상적인 아이디어를 탐구하는 것을 즐깁니다.",
        "study": "• 원리와 개념 중심의 학습\n• 가설을 세우고 검증하기\n• 독립적인 연구 및 탐구 활동"
    },
    "ESTP": {
        "type": "모험을 즐기는 사업가 (활동가형)",
        "description": "에너지가 넘치고 행동 지향적이며, 직접 부딪히고 경험하며 배우는 것을 선호합니다.",
        "study": "• 현장 학습 및 체험 활동\n• 게임이나 경쟁을 통한 학습\n• 짧고 집중적인 학습 세션"
    },
    "ESFP": {
        "type": "자유로운 영혼의 연예인 (사교형)",
        "description": "사교적이고 즉흥적이며, 즐거운 분위기 속에서 다른 사람들과 함께 배울 때 가장 효과적입니다.",
        "study": "• 그룹 프로젝트 및 팀 활동\n• 역할극 및 시뮬레이션 학습\n• 긍정적인 피드백과 격려"
    },
    "ENFP": {
        "type": "재기발랄한 활동가 (스파크형)",
        "description": "열정적이고 상상력이 풍부하며, 다양한 가능성을 탐색하고 새로운 아이디어를 시도하는 것을 좋아합니다.",
        "study": "• 브레인스토밍 및 토론\n• 다양한 주제를 넘나드는 학습\n• 열정적인 멘토와의 교류"
    },
    "ENTP": {
        "type": "뜨거운 논쟁을 즐기는 변론가 (발명가형)",
        "description": "두뇌 회전이 빠르고 논쟁을 즐기며, 지적인 도전을 통해 성장하고 배우는 유형입니다.",
        "study": "• 토론 및 논쟁 참여\n• 복잡한 문제 해결하기\n• 기존 지식에 의문을 제기하기"
    },
    "ESTJ": {
        "type": "엄격한 관리자 (사업가형)",
        "description": "체계적이고 현실적이며, 명확한 목표와 계획에 따라 효율적으로 학습하는 것을 선호합니다.",
        "study": "• 구체적인 학습 계획표 작성\n• 실용적인 지식과 기술 습득\n• 리더 역할을 맡아 스터디 진행"
    },
    "ESFJ": {
        "type": "사교적인 외교관 (친선도모형)",
        "description": "타인에게 관심이 많고 협조적이며, 다른 사람들과의 상호작용 속에서 학습 효과가 극대화됩니다.",
        "study": "• 협동 학습 및 그룹 과제\n• 다른 사람을 가르치며 학습하기\n• 긍정적이고 지지적인 학습 환경"
    },
    "ENFJ": {
        "type": "정의로운 사회운동가 (언변능숙형)",
        "description": "카리스마 있고 사람들을 이끄는 것을 좋아하며, 타인에게 영감을 주거나 받으며 학습합니다.",
        "study": "• 발표 및 프레젠테이션\n• 멘토링 또는 리더십 활동\n• 사회적 가치가 있는 주제 탐구"
    },
    "ENTJ": {
        "type": "대담한 통솔자 (지도자형)",
        "description": "전략적이고 결단력이 있으며, 목표를 달성하기 위해 학습을 도구로 활용하는 데 능숙합니다.",
        "study": "• 장기적인 목표 설정 및 전략 수립\n• 효율적인 학습 방법론 적용\n• 리더십과 관련된 지식 습득"
    }
}

# --- 3. 앱 제목 및 설명 ---
# st.title()은 가장 큰 제목을, st.header()는 중간 제목을 표시합니다.
st.title("🧠 MBTI 학습 유형 진단")
st.header("나는 어떤 방식으로 공부할 때 가장 효율적일까?", divider="rainbow")
st.write("간단한 질문에 답변하고 나에게 꼭 맞는 학습 전략을 찾아보세요!")


# --- 4. 질문 및 선택지 ---
# 각 MBTI 지표(E/I, S/N, T/F, J/P)를 진단하기 위한 질문 목록입니다.
questions = [
    # E(외향) / I(내향)
    "새로운 사람들과의 파티나 모임에 가면 나는...",
    "주말에 에너지를 재충전하는 방식은...",
    # S(감각) / N(직관)
    "새로운 정보를 접할 때 나는...",
    "미래를 생각할 때 나는 주로...",
    # T(사고) / F(감정)
    "결정을 내릴 때 더 중요하게 생각하는 것은...",
    "친구가 고민을 털어놓을 때 나는...",
    # J(판단) / P(인식)
    "여행을 계획할 때 나는...",
    "과제를 시작할 때 나는..."
]

options = [
    ["주로 먼저 말을 걸며 에너지를 얻는다.", "조용히 관찰하며 에너지를 아낀다."],  # E/I
    ["친구들과 만나거나 활동적인 일을 한다.", "집에서 혼자 조용히 시간을 보낸다."], # E/I
    ["구체적이고 실제적인 사실에 집중한다.", "전체적인 그림과 숨겨진 의미를 찾는다."], # S/N
    ["현실적으로 일어날 가능성이 있는 일을 상상한다.", "이상적이고 새로운 가능성을 상상한다."], # S/N
    ["논리적인 분석과 객관적인 사실.", "상황에 관련된 사람들의 감정과 관계."], # T/F
    ["해결책을 찾아주려고 논리적으로 조언한다.", "먼저 공감해주고 감정적으로 위로한다."], # T/F
    ["항공권, 숙소, 일정을 미리 다 정해놓는다.", "대략적인 계획만 세우고 즉흥적으로 움직인다."], # J/P
    ["마감기한 전에 미리 계획을 세워 시작한다.", "마감기한이 임박했을 때 집중해서 시작한다."]  # J/P
]

# 각 선택지에 해당하는 MBTI 지표를 지정합니다.
option_to_mbti = [
    ['E', 'I'], ['E', 'I'],
    ['S', 'N'], ['S', 'N'],
    ['T', 'F'], ['T', 'F'],
    ['J', 'P'], ['J', 'P']
]


# --- 5. 질문 렌더링 및 답변 저장 ---
# st.form()은 여러 위젯을 하나로 묶어 '제출' 버튼을 누를 때만 실행되게 합니다.
# 이렇게 하면 사용자가 라디오 버튼 하나를 누를 때마다 화면이 새로고침되는 것을 방지할 수 있습니다.
with st.form("mbti_form"):
    
    # 각 질문과 선택지를 화면에 표시합니다.
    # enumerate()를 사용하면 리스트의 순서(index)와 값(q)을 함께 가져올 수 있습니다.
    user_answers = []
    for i, q in enumerate(questions):
        # st.radio()는 라디오 버튼을 만듭니다. horizontal=True는 버튼을 가로로 배열합니다.
        answer = st.radio(q, options[i], key=f"q{i}", horizontal=True)
        user_answers.append(answer)

    # st.form_submit_button()은 폼 제출 버튼을 만듭니다.
    # use_container_width=True는 버튼을 화면 너비에 맞게 채웁니다.
    submitted = st.form_submit_button("결과 보기", use_container_width=True)


# --- 6. 결과 계산 및 표시 ---
# '결과 보기' 버튼이 눌렸을 때(submitted == True) 아래 코드가 실행됩니다.
if submitted:
    # MBTI 각 지표별 점수를 계산하기 위한 딕셔너리입니다.
    scores = {'E': 0, 'I': 0, 'S': 0, 'N': 0, 'T': 0, 'F': 0, 'J': 0, 'P': 0}

    # 사용자의 답변을 하나씩 확인하며 점수를 매깁니다.
    for i, answer in enumerate(user_answers):
        # 사용자가 선택한 답변(answer)이 해당 질문의 첫 번째 옵션인지, 두 번째 옵션인지 확인합니다.
        selected_option_index = options[i].index(answer)
        
        # 옵션 순서에 맞는 MBTI 지표를 가져옵니다. (예: 0번은 E, 1번은 I)
        mbti_char = option_to_mbti[i][selected_option_index]
        
        # 해당 MBTI 지표의 점수를 1 증가시킵니다.
        scores[mbti_char] += 1

    # 점수를 비교하여 최종 MBTI 유형을 결정합니다.
    mbti_result = ""
    mbti_result += "E" if scores['E'] > scores['I'] else "I"
    mbti_result += "S" if scores['S'] > scores['N'] else "N"
    mbti_result += "T" if scores['T'] > scores['F'] else "F"
    mbti_result += "J" if scores['J'] > scores['P'] else "P"

    # st.session_state는 세션(사용자가 앱에 접속해 있는 동안) 동안 데이터를 저장하는 공간입니다.
    # 여기에 결과를 저장하면, 다른 동작을 하더라도 결과가 사라지지 않습니다.
    st.session_state.mbti_result = mbti_result


# --- 7. 최종 결과 화면 출력 ---
# st.session_state에 'mbti_result' 값이 존재할 때만 결과를 화면에 보여줍니다.
# 이렇게 하면 사용자가 처음 앱에 접속했을 때는 결과창이 보이지 않습니다.
if 'mbti_result' in st.session_state:
    result = results[st.session_state.mbti_result]
    
    # ⭐️ 수정된 부분: MBTI 유형과 학습 유형 설명을 함께 표시합니다.
    st.header(f"당신의 학습 유형은: **{st.session_state.mbti_result} ({result['type']})**", divider="rainbow")
    
    st.subheader("💡 유형 특징")
    st.write(result['description'])
    
    st.subheader("✍️ 추천 학습 전략")
    st.write(result['study'])

    # st.button()을 사용해 다시 테스트할 수 있는 기능을 제공합니다.
    # 버튼을 누르면 세션에 저장된 결과가 삭제되어 초기 화면으로 돌아갑니다.
    if st.button("다시 테스트하기", use_container_width=True):
        del st.session_state.mbti_result
        st.rerun() # rerun 명령으로 페이지를 즉시 새로고침합니다.